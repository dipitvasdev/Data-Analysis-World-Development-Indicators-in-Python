# -*- coding: utf-8 -*-
"""Data Analysis and Visualisation - WDI Dataset

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PpXL5lHWX-_K6YV7AEKmzGWhqBv_kg2D

# Importing Necessary Libraries
"""

# importing zipfile module
from zipfile import ZipFile
## import pandas
import pandas as pd
## For Visualization
import seaborn as sns
import matplotlib.pyplot as plt

# Set theme
sns.set_theme(style="darkgrid")

## Import numpy
import numpy as np

"""# Load WDI Dataset 

First we download WDI dataset in CSV format from https://datacatalog.worldbank.org/search/dataset/0037712/World-Development-Indicators

The file downloaded is WDI_CSV.zip, so first we will extract it
"""

## Extracting the Dataset 

with ZipFile("WDI_CSV.zip", "r") as zip:
  zip.extractall("WDI_CSV")

"""Now let's load data from ```WDIData.csv```"""

df = pd.read_csv("WDI_CSV/WDIData.csv")

## View data set snapshot
df.head(n=5)

"""# Preprocessing the Data"""

## View data info

df.info()

## As a preprocessing step let's drop duplicates

df.drop_duplicates(inplace = True)

## Delete Column 66 

df = df.drop(columns = ["Unnamed: 66"])

df.info()

"""# Data Exploration and Visualisation

1. Let's pick a few indicators and visualize them by countries and years

## Indicator 1: Access to clean fuels and technologies for cooking (% of population)

So , first let's see how many unique Indicators are there in the dataset
"""

unique_indicators = df["Indicator Name"].unique()
print("Number of Unique Indicators: %d"%(len(unique_indicators)))

## Let's pick the first one

indicator_1 = unique_indicators[0]
print(indicator_1)

"""As we can see that this indicator shows countries and years where % of population have access to clean fuel and technologies"""

## Get data with Indicator 1 
df_indicator1 = df[df["Indicator Name"] == indicator_1]

df_indicator1.shape

## Convert data from wide format to long format 

df_indicator1 = df_indicator1.melt(id_vars=['Country Name', 'Country Code', 'Indicator Name', 'Indicator Code'], var_name='year', value_name='value')

df_indicator1.head(n=5)

"""### Line Chart: Trend of Indicator 1 for group of countries 

For countries: ["Arab World", "Bhutan", "India", "China", "United States"]
"""

## Plot Data for ["Arab World", "Bhutan", "India", "China", "United States"]
line_plot = sns.lineplot(df_indicator1[df_indicator1["Country Name"].isin(["Arab World", "Bhutan", "India", "China", "United States"])], x= 'year', y= 'value', hue = "Country Name")
line_plot.set_xlabel("Year")
line_plot.set_ylabel(indicator_1, fontsize=10, wrap=True)
line_plot.set_title("Line Plot " + str(indicator_1) + " For Different Countries",wrap=True)
plt.xticks(rotation=90)
plt.show()

"""We can observe the following from this graph:- 

1. There is no data before 2000
2. United states maintains 100% Access to clean fuels and technologies for cooking
3. India has seen quick growth throughout the years but still remains last in this indicator 
4. Bhutan overtoom China in 2005

### Bar Chart: Compare the indicator 1 values between different countries in a particular year

#### For Year 2005

let's first consider the 5 contries we saw above
"""

## Countries = ["Arab World", "Bhutan", "India", "China", "United States"]
data = df_indicator1[df_indicator1["year"] == '2005']
bar_plot = sns.barplot(data[data['Country Name'].isin(["Arab World", "Bhutan", "India", "China", "United States"])], x="Country Name", y="value")
bar_plot.set_ylabel(indicator_1, fontsize=10, wrap=True)
bar_plot.set_title("Bar Plot " + str(indicator_1) + " For Different Countries(2005)",wrap=True)
plt.show()

"""Now let's pick 10 countries randomly """

random_countries = np.random.choice(df_indicator1["Country Name"].unique(), size=10, replace=False)
print(random_countries)

## Plot bar for these

data = df_indicator1[df_indicator1["year"] == '2005']
bar_plot = sns.barplot(data[data['Country Name'].isin(random_countries)], x="Country Name", y="value")
bar_plot.set_ylabel(indicator_1, fontsize=10, wrap=True)
bar_plot.set_title("Bar Plot " + str(indicator_1) + " For Different Countries(2005)",wrap=True)
plt.xticks(rotation=90)
plt.show()

"""#### For Year 2020

let's first consider the 5 contries we saw above
"""

## Countries = ["Arab World", "Bhutan", "India", "China", "United States"]
data = df_indicator1[df_indicator1["year"] == '2020']
bar_plot = sns.barplot(data[data['Country Name'].isin(["Arab World", "Bhutan", "India", "China", "United States"])], x="Country Name", y="value")
bar_plot.set_ylabel(indicator_1, fontsize=10, wrap=True)
bar_plot.set_title("Bar Plot " + str(indicator_1) + " For Different Countries(2020)",wrap=True)
plt.show()

"""For random countries above"""

## Plot bar for these

bar_plot = sns.barplot(data[data['Country Name'].isin(random_countries)], x="Country Name", y="value")
bar_plot.set_ylabel(indicator_1, fontsize=10, wrap=True)
bar_plot.set_title("Bar Plot " + str(indicator_1) + " For Different Countries(2020)",wrap=True)
plt.xticks(rotation=90)
plt.show()

"""### Heatmap: Indicator 1 accross different countries and years"""

## Pick 5 countries we consodered
data = df_indicator1[df_indicator1["year"].isin(['2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019'])]
data = data[data['Country Name'].isin(["Arab World", "Bhutan", "India", "China", "United States"])]
data_pivot = data.pivot("Country Name", "year", "value")
heat_map = sns.heatmap(data_pivot)
heat_map.set_title("Heat Map " + str(indicator_1) + " For Different Countries(2020)",wrap=True)
plt.plot()

"""## Indicator 2: Access to clean fuels and technologies for cooking (% of population)

So , first let's see how many unique Indicators are there in the dataset
"""

## Let's pick the another

indicator_2 = "GDP (current US$)"
print(indicator_2)

"""As we can see that this indicator shows GDP in US$"""

## Get data with Indicator 2 
df_indicator2 = df[df["Indicator Name"] == indicator_2]

df_indicator2.shape

## Convert data from wide format to long format 

df_indicator2 = df_indicator2.melt(id_vars=['Country Name', 'Country Code', 'Indicator Name', 'Indicator Code'], var_name='year', value_name='value')

df_indicator2.head(n=5)

"""### Line Chart: Trend of Indicator 2 for group of countries 

For countries: ["Arab World", "Thailand", "India", "China", "United States"]
"""

## Plot Data for ["Arab World", "Thailand", "India", "China", "United States"]
sns.set(rc={'figure.figsize':(15,5)})
line_plot = sns.lineplot(df_indicator2[df_indicator2["Country Name"].isin(["Arab World", "Thailand", "India", "China", "United States"])], x= 'year', y= 'value', hue = "Country Name")
line_plot.set_xlabel("Year")
line_plot.set_ylabel(indicator_2, fontsize=10, wrap=True)
line_plot.set_title("Line Plot " + str(indicator_2) + " For Different Countries",wrap=True)
plt.xticks(rotation=90)
plt.show()

"""We can observe the following from this graph:- 

1. United states maintains the highest GDP
2. China's GDP has grown very drastically from 2000 to 2021
3. India's GDP overtook Arab World's GDP recently in 2020

### Bar Chart: Compare the indicator 2 values between different countries in a particular year

#### For Year 2009

let's first consider the 5 contries we saw above
"""

## Countries = ["Arab World", "Thailand", "India", "China", "United States"]
sns.set(rc={'figure.figsize':(6.4,4.8)})
data = df_indicator2[df_indicator2["year"] == '2009']
bar_plot = sns.barplot(data[data['Country Name'].isin(["Arab World", "Thailand", "India", "China", "United States"])], x="Country Name", y="value")
bar_plot.set_ylabel(indicator_2, fontsize=10, wrap=True)
bar_plot.set_title("Bar Plot " + str(indicator_2) + " For Different Countries(2009)",wrap=True)
plt.show()

"""Now let's pick 10 countries randomly """

random_countries = np.random.choice(df_indicator1["Country Name"].unique(), size=10, replace=False)
print(random_countries)

## Plot bar for these

data = df_indicator2[df_indicator2["year"] == '2009']
bar_plot = sns.barplot(data[data['Country Name'].isin(random_countries)], x="Country Name", y="value")
bar_plot.set_ylabel(indicator_2, fontsize=10, wrap=True)
bar_plot.set_title("Bar Plot " + str(indicator_2) + " For Different Countries(2009)",wrap=True)
plt.xticks(rotation=90)
plt.show()

"""#### For Year 2020

let's first consider the 5 contries we saw above
"""

## Countries = ["Arab World", "Thailand", "India", "China", "United States"]
data = df_indicator2[df_indicator2["year"] == '2020']
bar_plot = sns.barplot(data[data['Country Name'].isin(["Arab World", "Thailand", "India", "China", "United States"])], x="Country Name", y="value")
bar_plot.set_ylabel(indicator_2, fontsize=10, wrap=True)
bar_plot.set_title("Bar Plot " + str(indicator_2) + " For Different Countries(2020)",wrap=True)
plt.show()

"""For random countries above"""

## Plot bar for these

bar_plot = sns.barplot(data[data['Country Name'].isin(random_countries)], x="Country Name", y="value")
bar_plot.set_ylabel(indicator_2, fontsize=10, wrap=True)
bar_plot.set_title("Bar Plot " + str(indicator_2) + " For Different Countries(2020)",wrap=True)
plt.xticks(rotation=90)
plt.show()

"""### Heatmap: Indicator 2 accross different countries and years"""

## Pick 5 countries we consodered
data = df_indicator2[df_indicator2["year"].isin(['2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019'])]
data = data[data['Country Name'].isin(["Arab World", "Thailand", "India", "China", "United States"])]
data_pivot = data.pivot("Country Name", "year", "value")
heat_map = sns.heatmap(data_pivot)
heat_map.set_title("Heat Map " + str(indicator_2) + " For Different Countries(2020)",wrap=True)
plt.plot()

"""2. Now let's view a stacked bar plot of variation of various Indicators of various countries for a particular year

## Grouped Bar: Different Indicators

We already have 2 indicators that we viewed, let's pick 2 more
"""

print(indicator_1)
print(indicator_2)

## Let's look for a indicator of life expectancy
for ind in unique_indicators:
  if("Life" in ind):
    print(ind)

## Lets consider Life expectancy at birth, total (years)
indicator_3 = "Life expectancy at birth, total (years)"

## Let's look for Human capital index(HCI) since that is an important indicator of knowlegde and health
for ind in unique_indicators:
  if("Human" in ind):
    print(ind)

## Indicator 4:-

indicator_4 = "Human capital index (HCI) (scale 0-1)"

## Filter these indicators

df_indicators = df[df["Indicator Name"].isin([indicator_1, indicator_2, indicator_3, indicator_4])]

print(df_indicators.shape)

df_indicators.head(n=5)

## Convert data from wide format to long format 

df_indicators = df_indicators.melt(id_vars=['Country Name', 'Country Code', 'Indicator Name', 'Indicator Code'], var_name='year', value_name='value')

df_indicators.head()

len(df_indicators["Country Name"].unique())

"""#### For year 2010

For the countries 

Countries = ["Arab World", "Thailand", "India", "China", "United States"]
"""

## Countries = ["Arab World", "Thailand", "India", "China", "United States"]
## Plot group bars
sns.set(rc={'figure.figsize':(8,8)})
data = df_indicators[df_indicators["year"] == '2020']
## Get Grouped Bar

group = sns.barplot(data[data['Country Name'].isin(["Arab World", "Thailand", "India", "China", "United States"])], x="Indicator Name",y="value", hue="Country Name")
## Set Log Scale to scale values
group.set_yscale("log")
plt.xticks(rotation=90,fontsize=6)
plt.show()

"""There are several other visualizations that can be done but for now let's stop here"""